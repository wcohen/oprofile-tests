# oprofile-single_process-run.exp
#   Copyright (C) 2012 Carl Love, IBM
#
# Modified by Carl Love <carll@us.ibm.com>
#   Copyright (C) 2013 Carl Love, IBM Corporation
#
# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
#


load_lib "op_events.exp"
load_lib "op_util.exp"
load_lib "op_workloads.exp"
load_lib "verify.exp"

set operf_version 0


proc oprofile-single_process_run_tests {} {
    global op_event_table
    set cpu [operf_cpu_type]


    if {$cpu == "bogus"} {
	send "Error, run single process test not able find CPU type, exiting.\n"
    } else {
	# check for workload symbols in output
	set output_check 1
	set test_debug_option 0

	# The goal here is a quick sanity check so we will just do the
	# test using the first event entry
	set spec [lindex $op_event_table($cpu) 0]
	do_single_process_test $spec $output_check $test_debug_option
    }
}

proc oprofile-debug-option_run_tests {} {
    global op_event_table
    set cpu [operf_cpu_type]

    if {$cpu == "bogus"} {
	send "Error, run debug-info option test not able find CPU type, exiting.\n"
    } else {
	# check for workload symbols in output
	set output_check 1
	# test --debug-info option
	set test_debug_option  1

	# The goal here is a quick sanity check that the --debug
	# option doesn't crash the opreport tool
	set spec [lindex $op_event_table($cpu) 0]
	do_single_process_test $spec $output_check $test_debug_option
    }
}

#main

operf_get_version

if { $operf_version == 0} {
    send "\nThe OProfile operf user tool is not supported.  Will not run operf tests.\n"
} else {
    # Ensure that the oprofile kernel module is unloaded, since it can
    # interfere with proper operf operation on some platforms.
    local_exec "opcontrol --deinit" "" "" 100
    # Make sure there are no samples from operf laying around that opreport
    # might inadvertenly pick up.  Unfortunately, the user needs to make sure
    # the opcontrol data was previously deleted as root.  The goal is to be
    # able to run this test as a regular user.
    operf_delete_samples
    oprofile-single_process_run_tests
    oprofile-debug-option_run_tests
}
